---
- hosts: stereumnodes
  vars_files:
    - /etc/stereum/ethereum2.yaml

  tasks:
    - name: Overrule version tag if available
      set_fact:
        update:
          in_progress: "{{ update.in_progress  }}"
          lane: "{{ update.lane }}"
          available: "{{ stereum_version_tag_override }}"
          unattended:
            check: "{{ update.unattended.check }}"
            install: "{{ update.unattended.install }}"
      when: stereum_version_tag_override is defined

    - name: Check if update is available
      fail:
        msg: "No update available!"
      when: update.available is none or update.available | length < 2

    - name: Check if update is running
      fail:
        msg: "Update in progress!"
      when: update.in_progress is not none and update.in_progress | length > 0

    - name: Set update in progress
      lineinfile:
        path: "/etc/stereum/ethereum2.yaml"
        regexp: '^\s{2}in_progress:.*'
        line: "  in_progress: {{ update.available }}"
      become: yes

    - import_role:
        name: stop-services
      ignore_errors: true

    - import_role:
        name: git-checkout-tag
      vars:
        git_checkout_tag_git_repo_path: "{{ e2a_install_path }}"
        git_update_pull_tag: "{{ update.available }}"
        skip_stashing: false

    - import_role:
        name: git-checkout-tag
      vars:
        git_checkout_tag_git_repo_path: "{{ e2ccc_install_path }}"
        git_update_pull_tag: "{{ update.available }}"
        skip_stashing: false

    - import_role:
        name: git-checkout-tag
      vars:
        git_checkout_tag_git_repo_path: "{{ e2dc_install_path }}"
        git_update_pull_tag: "{{ network }}-{{ update.available }}"
        skip_stashing: false

    - name: Set version tag to new version
      lineinfile:
        path: "/etc/stereum/ethereum2.yaml"
        regexp: '^stereum_version_tag:.*'
        line: "stereum_version_tag: {{ update.available }}"
      become: yes

    - name: Remove available update
      lineinfile:
        path: "/etc/stereum/ethereum2.yaml"
        regexp: '^\s{2}available:.*'
        line: "  available:"
      become: yes

# EOF
